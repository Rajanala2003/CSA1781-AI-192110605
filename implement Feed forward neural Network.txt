import tensorflow as tf
from tensorflow import keras
from tensorflow.keras.models import Sequential
from tensorflow.keras.layers import Dense
import numpy as np

# Generate some sample data for training
np.random.seed(42)
X_train = np.random.rand(100, 4)  # 100 samples, 4 features
y_train = np.random.randint(0, 2, size=(100,))  # Binary classification

# Define the Feedforward Neural Network model
model = Sequential([
    Dense(8, activation='relu', input_shape=(4,)),
    Dense(4, activation='relu'),
    Dense(1, activation='sigmoid')  # Output layer for binary classification
])

# Compile the model
model.compile(optimizer='adam', loss='binary_crossentropy', metrics=['accuracy'])

# Train the model
model.fit(X_train, y_train, epochs=50, batch_size=10, verbose=1)

# Generate test data and evaluate the model
X_test = np.random.rand(20, 4)
y_test = np.random.randint(0, 2, size=(20,))
loss, accuracy = model.evaluate(X_test, y_test, verbose=0)
print(f'Accuracy: {accuracy * 100:.2f}%')
